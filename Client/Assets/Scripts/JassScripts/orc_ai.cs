// Generated by .


	public partial class GameDefine 
	{

		public class orc_ai
		{
		//==================================================================================================
		//  $Id: orc.ai,v 1.14 2003/04/23 19:26:00 bfitch Exp $
		//==================================================================================================
			public bool  basic_opening = true;
			public int  hunter_code = HEAD_HUNTER;
			public bool  b_hero1_done = false;
			public bool  b_hero2_done = false;
			public bool  b_ensnare = false;
			public int  c_altar_done = 0;
			public int  c_barracks_done = 0;
			public int  c_batrider = 0;
			public int  c_batrider_done = 0;
			public int  c_bestiary_done = 0;
			public int  c_burrow = 0;
			public int  c_burrow_done = 0;
			public int  c_cat = 0;
			public int  c_cat_done = 0;
			public int  c_doc = 0;
			public int  c_doc_done = 0;
			public int  c_food_made = 0;
			public int  c_food_used = 0;
			public int  c_forge_done = 0;
			public int  c_fortress_done = 0;
			public int  c_gold = 0;
			public int  c_gold_owned = 0;
			public int  c_great_hall = 0;
			public int  c_great_hall_done = 0;
			public int  c_grunt = 0;
			public int  c_grunt_done = 0;
			public int  c_hero1_done = 0;
			public int  c_hero2_done = 0;
			public int  c_hero3_done = 0;
			public int  c_hunter = 0;
			public int  c_hunter_done = 0;
			public int  c_kodo = 0;
			public int  c_kodo_done = 0;
			public int  c_lodge_done = 0;
			public int  c_mines = 0;
			public int  c_peon_done = 0;
			public int  c_raider = 0;
			public int  c_raider_done = 0;
			public int  c_shaman = 0;
			public int  c_shaman_done = 0;
			public int  c_stronghold_done = 0;
			public int  c_swalker = 0;
			public int  c_swalker_done = 0;
			public int  c_tauren = 0;
			public int  c_tauren_done = 0;
			public int  c_totem_done = 0;
			public int  c_voodoo_done = 0;
			public int  c_wyvern = 0;
			public int  c_wyvern_done = 0;
			public int  c_zep = 0;
		//--------------------------------------------------------------------------------------------------
		//  set_skills
		//--------------------------------------------------------------------------------------------------
			public void set_skills(  )
			{
				// Original JassCode
				skill[ 1] = MIRROR_IMAGE;
				skill[ 2] = CRITICAL_STRIKE;
				skill[ 3] = WIND_WALK;
				skill[ 4] = MIRROR_IMAGE;
				skill[ 5] = MIRROR_IMAGE;
				skill[ 6] = BLADE_STORM;
				skill[ 7] = CRITICAL_STRIKE;
				skill[ 8] = CRITICAL_STRIKE;
				skill[ 9] = WIND_WALK;
				skill[10] = WIND_WALK;
				SetSkillArray(1,BLADE_MASTER);
				SetSkillArray(2,BLADE_MASTER);
				SetSkillArray(3,BLADE_MASTER);
				skill[ 1] = CHAIN_LIGHTNING;
				skill[ 2] = SPIRIT_WOLF;
				skill[ 3] = CHAIN_LIGHTNING;
				skill[ 4] = SPIRIT_WOLF;
				skill[ 5] = CHAIN_LIGHTNING;
				skill[ 6] = EARTHQUAKE;
				skill[ 7] = SPIRIT_WOLF;
				skill[ 8] = FAR_SIGHT;
				skill[ 9] = FAR_SIGHT;
				skill[10] = FAR_SIGHT;
				SetSkillArray(1,FAR_SEER);
				SetSkillArray(2,FAR_SEER);
				SetSkillArray(3,FAR_SEER);
				skill[ 1] = SHOCKWAVE;
				skill[ 2] = ENDURANE_AURA;
				skill[ 3] = SHOCKWAVE;
				skill[ 4] = ENDURANE_AURA;
				skill[ 5] = SHOCKWAVE;
				skill[ 6] = REINCARNATION;
				skill[ 7] = ENDURANE_AURA;
				skill[ 8] = WAR_STOMP;
				skill[ 9] = WAR_STOMP;
				skill[10] = WAR_STOMP;
				SetSkillArray(1,TAUREN_CHIEF);
				SetSkillArray(2,TAUREN_CHIEF);
				SetSkillArray(3,TAUREN_CHIEF);
				skill[ 1] = HEALING_WAVE;
				skill[ 2] = SERPENT_WARD;
				skill[ 3] = HEALING_WAVE;
				skill[ 4] = SERPENT_WARD;
				skill[ 5] = HEALING_WAVE;
				skill[ 6] = VOODOO;
				skill[ 7] = SERPENT_WARD;
				skill[ 8] = HEX;
				skill[ 9] = HEX;
				skill[10] = HEX;
				SetSkillArray(1,SHADOW_HUNTER);
				SetSkillArray(2,SHADOW_HUNTER);
				SetSkillArray(3,SHADOW_HUNTER);
			}

		//--------------------------------------------------------------------------------------------------
		//  setup_force
		//--------------------------------------------------------------------------------------------------
			public void setup_force(  )
			{
				// Original JassCode
				AwaitMeleeHeroes();
				InitMeleeGroup();
				SetMeleeGroup( hero_id );
				SetMeleeGroup( hero_id2 );
				SetMeleeGroup( hero_id3 );
				SetMeleeGroup( GRUNT );
				SetMeleeGroup( RAIDER );
				SetMeleeGroup( TAUREN );
				SetMeleeGroup( HEAD_HUNTER );
				SetMeleeGroup( BERSERKER );
				SetMeleeGroup( WYVERN );
				SetMeleeGroup( WITCH_DOCTOR );
				SetMeleeGroup( SHAMAN );
				SetMeleeGroup( KODO_BEAST );
				SetMeleeGroup( BATRIDER );
				SetMeleeGroup( SPIRIT_WALKER );
				SetInitialWave(10);
			}

		//--------------------------------------------------------------------------------------------------
		//  force_level
		//--------------------------------------------------------------------------------------------------
			public int force_level(  )
			{
				// Original JassCode
				int level = 4;
				level = level + 2 * (c_hunter_done + c_raider_done + c_batrider_done + c_shaman_done + c_doc_done + c_swalker_done);
				level = level + 3 * (c_grunt_done + c_kodo_done + c_wyvern_done);
				level = level + 5 * (c_hero3_done + c_tauren_done);
				level = level + 6 * c_hero2_done;
				return level;
			}

		//--------------------------------------------------------------------------------------------------
		//  attack_sequence
		//--------------------------------------------------------------------------------------------------
			public void attack_sequence(  )
			{
				// Original JassCode
				bool needs_exp;
				bool has_siege;
				bool air_units;
				int level;
				while( true )
				{
					if(  c_hero1_done > 0 && c_grunt_done >= 2 )
						break;
					Sleep(2);
				}
				if(  MeleeDifficulty() == MELEE_NEWBIE  )
				{
					Sleep(240);
				}
				StaggerSleep(0,2);
				while( true )
				{
					while( true )
					{
						if(  ! CaptainRetreating() )
							break;
						Sleep(2);
					}
					setup_force();
					level = force_level();
					max_creeps = level * 4 / 5;
					min_creeps = max_creeps - 10;
					if(  min_creeps < 0  )
					{
						min_creeps = 0;
					}
					air_units = c_wyvern_done > 0 || c_batrider_done > 0;
					needs_exp = take_exp && (level >= 9 || c_gold_owned < 2000);
					has_siege = level >= 40 || 2*c_cat_done + c_raider_done + c_batrider_done >= 2;
					allow_air_creeps = c_wyvern_done + c_raider_done + c_hunter_done >= 3;
					SingleMeleeAttack(needs_exp,has_siege,false,air_units);
					if(  MeleeDifficulty() == MELEE_NEWBIE  )
					{
						Sleep(60);
					}
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  init_vars
		//--------------------------------------------------------------------------------------------------
			public void init_vars(  )
			{
				// Original JassCode
				if(  GetUpgradeLevel(UPG_ORC_BERSERK) >= 1  )
				{
					hunter_code = HEAD_HUNTER;
				}
				else
				{
					hunter_code = BERSERKER;
				}
				b_hero1_done = GetUnitCountDone(hero_id) >= 1;
				b_hero2_done = GetUnitCountDone(hero_id2) >= 1;
				b_ensnare = GetUpgradeLevel(UPG_ORC_ENSNARE) >= 1;
				c_altar_done = GetUnitCountDone(ORC_ALTAR);
				c_barracks_done = GetUnitCountDone(ORC_BARRACKS);
				c_batrider = GetUnitCount(BATRIDER);
				c_batrider_done = GetUnitCountDone(BATRIDER);
				c_bestiary_done = GetUnitCountDone(BESTIARY);
				c_burrow = GetUnitCount(BURROW);
				c_burrow_done = GetUnitCountDone(BURROW);
				c_cat = GetUnitCount(CATAPULT);
				c_cat_done = GetUnitCountDone(CATAPULT);
				c_doc = GetUnitCount(WITCH_DOCTOR);
				c_doc_done = GetUnitCountDone(WITCH_DOCTOR);
				c_food_made = c_great_hall * GetFoodMade(GREAT_HALL) + c_burrow * GetFoodMade(BURROW);
				c_food_used = FoodUsed();
				c_forge_done = GetUnitCountDone(FORGE);
				c_fortress_done = TownCountDone(FORTRESS);
				c_gold = GetGold();
				c_gold_owned = GetGoldOwned();
				c_great_hall = TownCount(GREAT_HALL);
				c_great_hall_done = TownCountDone(GREAT_HALL);
				c_grunt = GetUnitCount(GRUNT);
				c_grunt_done = GetUnitCountDone(GRUNT);
				c_hero1_done = GetUnitCountDone(hero_id);
				c_hero2_done = GetUnitCountDone(hero_id2);
				c_hero3_done = GetUnitCountDone(hero_id3);
				c_hunter_done = TownCountDone(HEAD_HUNTER);
				c_kodo = GetUnitCount(KODO_BEAST);
				c_kodo_done = GetUnitCountDone(KODO_BEAST);
				c_lodge_done = GetUnitCountDone(LODGE);
				c_mines = GetMinesOwned();
				c_peon_done = GetUnitCountDone(PEON);
				c_raider = GetUnitCount(RAIDER);
				c_raider_done = GetUnitCountDone(RAIDER);
				c_shaman = GetUnitCount(SHAMAN);
				c_shaman_done = GetUnitCountDone(SHAMAN);
				c_stronghold_done = TownCountDone(STRONGHOLD);
				c_swalker = TownCount(SPIRIT_WALKER);
				c_swalker_done = TownCountDone(SPIRIT_WALKER);
				c_tauren = GetUnitCount(TAUREN);
				c_tauren_done = GetUnitCountDone(TAUREN);
				c_totem_done = GetUnitCountDone(TOTEM);
				c_voodoo_done = GetUnitCountDone(VOODOO_LOUNGE);
				c_wyvern = GetUnitCount(WYVERN);
				c_wyvern_done = GetUnitCountDone(WYVERN);
				c_zep = GetUnitCount(ZEPPELIN);
				if(  basic_opening && (b_hero2_done || (MeleeDifficulty() == MELEE_NEWBIE && c_stronghold_done >= 1))  )
				{
					basic_opening = false;
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  set_vars
		//--------------------------------------------------------------------------------------------------
			public void set_vars(  )
			{
				// Original JassCode
				while( true )
				{
					init_vars();
					Sleep(1);
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  do_upgrades
		//--------------------------------------------------------------------------------------------------
			public void do_upgrades(  )
			{
				// Original JassCode
				if(  c_totem_done >= 1 && c_tauren >= 1  )
				{
					SetBuildUpgr( 1, UPG_ORC_PULVERIZE );
				}
				if(  c_forge_done >= 1  )
				{
					if(  c_fortress_done >= 1  )
					{
						SetBuildUpgr( 1, UPG_ORC_BURROWS );
						SetBuildUpgr( 3, UPG_ORC_MELEE );
						SetBuildUpgr( 3, UPG_ORC_RANGED );
						SetBuildUpgr( 3, UPG_ORC_ARMOR );
						SetBuildUpgr( 3, UPG_ORC_SPIKES );
					}
					else if(  c_stronghold_done >= 1  )
					{
						SetBuildUpgr( 2, UPG_ORC_MELEE );
						SetBuildUpgr( 2, UPG_ORC_RANGED );
						SetBuildUpgr( 2, UPG_ORC_ARMOR );
					}
					else
					{
						SetBuildUpgr( 1, UPG_ORC_MELEE );
						SetBuildUpgr( 1, UPG_ORC_RANGED );
						SetBuildUpgr( 1, UPG_ORC_ARMOR );
					}
				}
				if(  c_bestiary_done >= 1  )
				{
					if(  c_raider >= 1  )
					{
						SetBuildUpgr( 1, UPG_ORC_ENSNARE );
					}
					if(  c_fortress_done >= 1  )
					{
						if(  c_wyvern >= 1  )
						{
							SetBuildUpgr( 1, UPG_ORC_VENOM );
						}
						if(  c_forge_done >= 1 && c_kodo >= 1  )
						{
							SetBuildUpgr( 1, UPG_ORC_WAR_DRUMS );
						}
						if(  c_voodoo_done >= 1 && c_batrider >= 1  )
						{
							SetBuildUpgr( 1, UPG_ORC_FIRE );
						}
					}
				}
				if(  c_barracks_done >= 1  )
				{
					if(  c_fortress_done >= 1 && c_grunt >= 2  )
					{
						SetBuildUpgr( 1, UPG_ORC_BERSERK );
					}
					if(  c_stronghold_done >= 1 && c_hunter >= 2  )
					{
						if(  c_forge_done >= 1  )
						{
							SetBuildUpgr( 1, UPG_ORC_BERSERKER );
						}
						SetBuildUpgr( 1, UPG_ORC_REGEN );
					}
				}
				if(  c_lodge_done >= 1  )
				{
					if(  c_fortress_done >= 1  )
					{
						if(  c_shaman >= 1  )
						{
							SetBuildUpgr( 2, UPG_ORC_SHAMAN );
						}
						if(  c_doc >= 1  )
						{
							SetBuildUpgr( 2, UPG_ORC_DOCS );
						}
						if(  c_swalker >= 1  )
						{
							SetBuildUpgr( 2, UPG_ORC_SWALKER );
						}
					}
					else
					{
						if(  c_shaman >= 2  )
						{
							SetBuildUpgr( 1, UPG_ORC_SHAMAN );
						}
						if(  c_doc >= 2  )
						{
							SetBuildUpgr( 1, UPG_ORC_DOCS );
						}
						if(  c_swalker >= 1  )
						{
							SetBuildUpgr( 1, UPG_ORC_SWALKER );
						}
					}
				}
				if(  c_great_hall_done >= 1 && c_raider >= 1  )
				{
					SetBuildUpgr( 1, UPG_ORC_PILLAGE );
				}
				if(  c_forge_done >= 1  )
				{
					if(  c_fortress_done >= 1  )
					{
						SetBuildUpgr( 3, UPG_ORC_SPIKES );
					}
					else if(  c_stronghold_done >= 1  )
					{
						SetBuildUpgr( 2, UPG_ORC_SPIKES );
					}
					else
					{
						SetBuildUpgr( 1, UPG_ORC_SPIKES );
					}
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  build_sequence
		//--------------------------------------------------------------------------------------------------
			public void build_sequence(  )
			{
				// Original JassCode
				int peons;
				InitBuildArray();
				if(  basic_opening  )
				{
					MeleeTownHall( 0, GREAT_HALL );
					MeleeTownHall( 1, GREAT_HALL );
					SetBuildUnit( 6, PEON );
					SetBuildUnit( 1, ORC_ALTAR );
					SetBuildUnit( 7, PEON );
					SetBuildUnit( 1, BURROW );
					SetBuildUnit( 8, PEON );
					SetBuildUnit( 2, BURROW );
					SetBuildUnit( 10, PEON );
					SetBuildUnit( 1, hero_id );
					SetBuildUnit( 11, PEON );
					SetBuildUnit( 1, ORC_BARRACKS );
					SetBuildUnit( 1, FORGE );
					SetBuildUnit( 14, PEON );
					SetBuildUnit( 1, GRUNT );
					SetBuildUpgr( 1, UPG_ORC_MELEE );
					SetBuildUnit( 2, GRUNT );
					SetBuildUnit( 3, BURROW );
					SetBuildUnit( 1, HEAD_HUNTER );
					SetBuildUnit( 1, VOODOO_LOUNGE );
					SetBuildUpgr( 1, UPG_ORC_RANGED );
					SetBuildUnit( 3, HEAD_HUNTER );
					SetBuildUpgr( 1, UPG_ORC_ARMOR );
					SetBuildUnit( 4, GRUNT );
					BasicExpansion( c_mines < 2, GREAT_HALL );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 1, 1, BURROW );
						GuardSecondary( 1, 2, ORC_WATCH_TOWER );
					}
					SetBuildUnit( 4, BURROW );
					SetBuildUnit( 6, GRUNT );
					SetBuildUnit( 1, STRONGHOLD );
					SetBuildUpgr( 1, UPG_ORC_SPIKES );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						SetBuildUnit( 1, hero_id2 );
					}
					SetBuildUnit( 5, BURROW );
					SetBuildUnit( 1, CATAPULT );
					SetBuildUpgr( 2, UPG_ORC_MELEE );
					SetBuildUpgr( 1, UPG_ORC_PILLAGE );
					SetBuildUnit( 2, CATAPULT );
					return;
				}
				// need a peon or nothing will get built
				//
				if(  c_great_hall_done >= 1  )
				{
					peons = 6 - GetWood() / 200;
					if(  peons < 3  )
					{
						peons = 3;
					}
					if(  c_mines < 2 || c_great_hall_done < 2  )
					{
						peons = peons + 5;
					}
					else
					{
						peons = peons + 10;
					}
					if(  peons > 15  )
					{
						peons = 15;
					}
					SetBuildNext( peons, PEON );
				}
				// need a great hall or we can't resource and make more peons
				//
				if(  c_great_hall < 1 && c_peon_done >= 1  )
				{
					MeleeTownHall( 0, GREAT_HALL );
					MeleeTownHall( 1, GREAT_HALL );
					MeleeTownHall( 2, GREAT_HALL );
				}
				if(  c_gold > 500 && GetWood() < 100  )
				{
					SetBuildNext( 15, PEON );
				}
				// if we have low gold in our mines then we need to expand
				//
				if(  c_gold_owned < 2000  )
				{
					BasicExpansion( c_mines < 2, GREAT_HALL );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 1, 1, BURROW );
					}
				}
				// get enough burrows to handle current food demand
				//
				if(  c_food_used + 5 >= c_food_made  )
				{
					SetBuildUnit( c_burrow_done + 1, BURROW );
				}
				// always rebuild heroes for defense
				//
				if(  c_altar_done >= 1  )
				{
					if(  b_hero1_done && MeleeDifficulty() != MELEE_NEWBIE  )
					{
						SetBuildUnit( 1, hero_id2 );
					}
					else
					{
						SetBuildUnit( 1, hero_id );
					}
				}
				else
				{
					SetBuildUnit( 1, ORC_ALTAR );
				}
				// minimum melee defense
				//
				if(  c_totem_done >= 1  )
				{
					SetBuildUnit( 2, TAUREN );
				}
				else
				{
					SetBuildUnit( 1, ORC_BARRACKS );
					SetBuildUnit( 3, GRUNT );
				}
				// minimum ranged/air defense and siege units
				//
				if(  c_bestiary_done >= 1  )
				{
					if(  c_fortress_done >= 1  )
					{
						SetBuildUnit( 2, WYVERN );
					}
					else if(  b_ensnare  )
					{
						SetBuildUnit( 2, RAIDER );
					}
					else
					{
						SetBuildUnit( 1, ORC_BARRACKS );
						SetBuildUnit( 3, hunter_code );
					}
					if(  c_voodoo_done >= 1 && c_fortress_done >= 1  )
					{
						SetBuildUnit( 2, BATRIDER );
					}
					else
					{
						SetBuildUnit( 3, RAIDER );
					}
				}
				else
				{
					SetBuildUnit( 1, ORC_BARRACKS );
					SetBuildUnit( 3, hunter_code );
					SetBuildUnit( 2, CATAPULT );
				}
				// if we have a lot of gold then advance the tech tree
				//
				if(  c_gold > 1000  )
				{
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 1, 1, BURROW );
						GuardSecondary( 1, 1, ORC_WATCH_TOWER );
						GuardSecondary( 1, 2, BURROW );
						GuardSecondary( 1, 2, ORC_WATCH_TOWER );
					}
					SetBuildUnit( 1, ORC_BARRACKS );
					SetBuildUnit( 1, FORGE );
					SetBuildUnit( 1, VOODOO_LOUNGE );
					SetBuildUnit( 1, STRONGHOLD );
					SetBuildUnit( 1, LODGE );
					SetBuildUnit( 1, BESTIARY );
					SetBuildUnit( 1, FORTRESS );
					SetBuildUnit( 1, TOTEM );
					do_upgrades();
					if(  c_gold > 2000  )
					{
						BuildFactory( ORC_BARRACKS );
						BuildFactory( LODGE );
						BuildFactory( BESTIARY );
						BuildFactory( TOTEM );
					}
				}
				else if(  c_food_used >= UPKEEP_TIER1  )
				{
					do_upgrades();
				}
				BasicExpansion( c_mines < 2, GREAT_HALL );
				if(  MeleeDifficulty() != MELEE_NEWBIE  )
				{
					GuardSecondary( 1, 1, BURROW );
					GuardSecondary( 1, 2, ORC_WATCH_TOWER );
				}
				if(  c_food_used >= UPKEEP_TIER2 - 10 && c_gold < 2000  )
				{
					return;
				}
				// full up with more troops in general
				//
				if(  c_totem_done >= 1  )
				{
					SetBuildNext( 4, TAUREN );
				}
				else
				{
					SetBuildNext( 6, GRUNT );
				}
				if(  c_bestiary_done >= 1  )
				{
					if(  c_fortress_done >= 1  )
					{
						SetBuildNext( 3, WYVERN );
					}
					else if(  b_ensnare  )
					{
						SetBuildNext( 4, RAIDER );
					}
					if(  c_forge_done >= 1  )
					{
						SetBuildUnit( 1, KODO_BEAST );
					}
				}
				if(  c_lodge_done >= 1  )
				{
					SetBuildUnit( 1, SHAMAN );
					SetBuildUnit( 1, WITCH_DOCTOR );
					SetBuildUnit( 1, SPIRIT_WALKER );
					SetBuildNext( 4, SHAMAN );
					SetBuildNext( 2, WITCH_DOCTOR );
				}
				if(  c_gold_owned < 10000  )
				{
					BasicExpansion( c_mines < 3, GREAT_HALL );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 2, 1, BURROW );
						GuardSecondary( 2, 2, ORC_WATCH_TOWER );
					}
				}
				if(  c_food_used >= 60 && c_zep < 3  )
				{
					GetZeppelin();
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  peon_asignment
		//--------------------------------------------------------------------------------------------------
			public void peon_assignment(  )
			{
				// Original JassCode
				int T;
				while( true )
				{
					ClearHarvestAI();
					T = TownWithMine();
					HarvestGold(T,4);
					HarvestWood(0,1);
					HarvestGold(T,1);
					HarvestWood(0,1);
					if(  c_great_hall_done > 1 && c_mines > 1  )
					{
						HarvestGold(T+1,5);
					}
					HarvestWood(0,10);
					build_sequence();
					Sleep(GetRandomInt(1,3));
				}
			}

		//--------------------------------------------------------------------------------------------------
		//    main
		//--------------------------------------------------------------------------------------------------
			public void main(  )
			{
				// Original JassCode
				PickMeleeHero(RACE_ORC);
				set_skills();
				StandardAI(SkillArrays,  peon_assignment,  attack_sequence);
				StartThread( set_vars);
				PlayGame();
			}

		} // class orc_ai 

	}

