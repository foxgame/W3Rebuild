// Generated by .


	public partial class GameDefine 
	{

		public class u05x07_ai
		{
		//==================================================================================================
		//  $Id: u05x07.ai,v 1.19.2.1 2003/05/09 09:17:05 abond Exp $
		//==================================================================================================
			public BJPlayer  user = PlayerEx(4);
			// normal & easy delay
			public int  delay = M5;
			// hard delay
			public int  hard_delay = M4;
			// hard delay after final signal
			public int  fast_delay = M3;
		//--------------------------------------------------------------------------------------------------
		//  check_base_deaths
		//--------------------------------------------------------------------------------------------------
			public void check_base_deaths(  )
			{
				// Original JassCode
				if(  difficulty == HARD  )
				{
					return;
				}
				while( true )
				{
					if(  CommandsWaiting() != 0 )
						break;
					Trace("check_base_deaths waiting for signal...\n");
					Sleep(10);
				}
				PopLastCommand();
				delay = fast_delay;
			}

		//--------------------------------------------------------------------------------------------------
		//  upgrade_towers
		//--------------------------------------------------------------------------------------------------
			public void upgrade_towers(  )
			{
				// Original JassCode
				int count;
				while( true )
				{
					count = TownCountDone(ZIGGURAT_1);
					if(  count > 0  )
					{
						SetProduce(count,ZIGGURAT_2,-1);
					}
					Sleep(1);
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  main
		//--------------------------------------------------------------------------------------------------
			public void main(  )
			{
				// Original JassCode
				CampaignAI(ZIGGURAT_1,null);
				SetReplacements(2,2,3);
				campaign_wood_peons = 2;
				if(  difficulty == HARD  )
				{
					delay = hard_delay;
				}
				SetBuildUnitEx( 1, 1, 1, ACOLYTE );
				SetBuildUnitEx( 1, 1, 1, NECROPOLIS_1 );
				SetBuildUnitEx( 0, 0, 1, UNDEAD_MINE );
				SetBuildUnitEx( 0, 0, 1, CRYPT );
				SetBuildUnitEx( 0, 0, 8, ZIGGURAT_1 );
				SetBuildUnitEx( 0, 0, 1, GRAVEYARD );
				SetBuildUnitEx( 0, 0, 1, UNDEAD_ALTAR );
				SetBuildUnitEx( 1, 1, 1, NECROPOLIS_2 );
				SetBuildUnitEx( 0, 0, 1, SLAUGHTERHOUSE );
				SetBuildUnitEx( 0, 0, 1, DAMNED_TEMPLE );
				SetBuildUnitEx( 1, 1, 1, NECROPOLIS_3 );
				SetBuildUnitEx( 0, 0, 1, BONEYARD );
				SetBuildUnitEx( 5, 5, 5, ACOLYTE );
				WaitForSignal();
				// SUICIDE WAVES - Occur after timer runs out
				SuicideOnce( 3, 3, 5, GHOUL );
				SuicideOnce( 1, 1, 2, ABOMINATION );
				SuicideOnce( 1, 1, 1, FROST_WYRM );
				SuicideOnce( 2, 2, 3, CRYPT_FIEND );
				SuicideOnce( 2, 2, 2, GARGOYLE );
				SuicideOnce( 2, 2, 2, NECRO );
				SuicideOnce( 1, 1, 1, DETHEROC );
				WaitForSignal();
				// ENABLE DEFENDERS - Occurs after Suicide is over
				CampaignDefenderEx( 1, 1, 1, ABOMINATION );
				CampaignDefenderEx( 1, 1, 1, OBS_STATUE );
				CampaignDefenderEx( 0, 0, 1, FROST_WYRM );
				CampaignDefenderEx( 0, 0, 1, CRYPT_FIEND );
				CampaignDefenderEx( 0, 0, 1, DETHEROC );
				StartThread( upgrade_towers);
				SetBuildUpgrEx( 1, 1, 1, UPG_BLK_SPHINX );
				WaitForSignal();
				StartThread( check_base_deaths);
				//*** WAVE 1 ***
				InitAssaultGroup();
				CampaignAttackerEx( 2,2,3, CRYPT_FIEND );
				CampaignAttackerEx( 6,6,8, GHOUL );
				SuicideOnPlayerEx(M2,M2,M2,user);
				SetBuildUpgrEx( 0,0,1, UPG_UNHOLY_STR );
				SetBuildUpgrEx( 0,1,1, UPG_CR_ATTACK );
				//*** WAVE 2 ***
				InitAssaultGroup();
				CampaignAttackerEx( 2,2,3, GARGOYLE );
				CampaignAttackerEx( 5,5,6, GHOUL );
				CampaignAttackerEx( 1,1,1, DETHEROC );
				SuicideOnPlayer(delay,user);
				SetBuildUpgrEx( 0,0,1, UPG_UNHOLY_ARMOR);
				SetBuildUpgrEx( 0,0,1, UPG_CR_ARMOR );
				SetBuildUpgrEx( 1,1,1, UPG_NECROS );
				//*** WAVE 3 ***
				InitAssaultGroup();
				CampaignAttackerEx( 5,5,8, GARGOYLE );
				CampaignAttackerEx( 1,1,2, FROST_WYRM );
				CampaignAttackerEx( 1,1,2, BLK_SPHINX );
				SuicideOnPlayer(delay,user);
				SetBuildUpgrEx( 0,0,1, UPG_PLAGUE );
				SetBuildUpgrEx( 0,0,1, UPG_GHOUL_FRENZY);
				SetBuildUpgrEx( 1,1,1, UPG_WYRM_BREATH );
				//*** WAVE 4 ***
				InitAssaultGroup();
				CampaignAttackerEx( 1,1,2, MEAT_WAGON );
				CampaignAttackerEx( 3,3,4, ABOMINATION );
				CampaignAttackerEx( 1,1,1, DETHEROC );
				SuicideOnPlayer(delay,user);
				SetBuildUpgrEx( 1,1,2, UPG_UNHOLY_STR );
				SetBuildUpgrEx( 1,1,2, UPG_CR_ATTACK );
				//*** WAVE 5 ***
				InitAssaultGroup();
				CampaignAttackerEx( 3,3,4, BLK_SPHINX );
				CampaignAttackerEx( 2,2,3, FROST_WYRM );
				SuicideOnPlayer(delay,user);
				SetBuildUpgrEx( 1,1,2, UPG_UNHOLY_ARMOR);
				SetBuildUpgrEx( 1,1,2, UPG_CR_ARMOR );
				SetBuildUpgrEx( 2,2,2, UPG_NECROS );
				//*** WAVE 6 ***
				InitAssaultGroup();
				CampaignAttackerEx( 1,1,1, DETHEROC );
				CampaignAttackerEx( 6,6,8, GHOUL );
				CampaignAttackerEx( 4,4,6, ABOMINATION );
				CampaignAttackerEx( 1,1,2, MEAT_WAGON );
				SuicideOnPlayer(delay,user);
				SetBuildUpgrEx( 2,2,3, UPG_UNHOLY_STR );
				SetBuildUpgrEx( 2,2,3, UPG_CR_ATTACK );
				SetBuildUpgrEx( 1,1,1, UPG_GHOUL_FRENZY);
				SetBuildUpgrEx( 1,1,1, UPG_PLAGUE );
				//*** WAVE 7+ ***
				while( true )
				{
					InitAssaultGroup();
					CampaignAttackerEx( 3,3,6, GARGOYLE );
					CampaignAttackerEx( 1,1,2, FROST_WYRM );
					CampaignAttackerEx( 2,2,3, BLK_SPHINX );
					SuicideOnPlayer(delay,user);
					InitAssaultGroup();
					CampaignAttackerEx( 1,1,1, DETHEROC );
					CampaignAttackerEx( 5,5,7, ABOMINATION );
					CampaignAttackerEx( 1,1,2, MEAT_WAGON );
					SuicideOnPlayer(delay,user);
					InitAssaultGroup();
					CampaignAttackerEx( 5,5,7, GARGOYLE );
					CampaignAttackerEx( 3,3,4, BLK_SPHINX );
					SuicideOnPlayer(delay,user);
					InitAssaultGroup();
					CampaignAttackerEx( 1,1,1, DETHEROC );
					CampaignAttackerEx( 8,8,8, GHOUL );
					CampaignAttackerEx( 1,1,2, ABOMINATION );
					CampaignAttackerEx( 1,1,2, MEAT_WAGON );
					SuicideOnPlayer(delay,user);
				}
			}

		} // class u05x07_ai 

	}

