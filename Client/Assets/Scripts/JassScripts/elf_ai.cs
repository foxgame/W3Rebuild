// Generated by .


	public partial class GameDefine 
	{

		public class elf_ai
		{
		//==================================================================================================
		//  $Id: elf.ai,v 1.18 2003/04/23 19:26:00 bfitch Exp $
		//==================================================================================================
			public bool  basic_opening = true;
			public bool  archer_opening = true;
			public int  wave = 0;
			public bool  b_acid_breath = false;
			public bool  b_hero1_done = false;
			public bool  b_hero2_done = false;
			public int  c_altar_done = 0;
			public int  c_archer = 0;
			public int  c_archer_done = 0;
			public int  c_ballista = 0;
			public int  c_ballista_done = 0;
			public int  c_bear = 0;
			public int  c_bear_done = 0;
			public int  c_chimaera = 0;
			public int  c_chimaera_done = 0;
			public int  c_dragon_done = 0;
			public int  c_dryad = 0;
			public int  c_dryad_done = 0;
			public int  c_food_made = 0;
			public int  c_food_used = 0;
			public int  c_gold = 0;
			public int  c_gold_owned = 0;
			public int  c_hero1_done = 0;
			public int  c_hero2_done = 0;
			public int  c_hero3_done = 0;
			public int  c_hunt_hall_done = 0;
			public int  c_huntress = 0;
			public int  c_huntress_done = 0;
			public int  c_lore_done = 0;
			public int  c_mines = 0;
			public int  c_mines_done = 0;
			public int  c_moon_well = 0;
			public int  c_moon_well_done = 0;
			public int  c_mtn_giant = 0;
			public int  c_mtn_giant_done = 0;
			public int  c_roost_done = 0;
			public int  c_talon = 0;
			public int  c_talon_done = 0;
			public int  c_tree_ages_done = 0;
			public int  c_tree_etern_done = 0;
			public int  c_tree_life = 0;
			public int  c_tree_life_done = 0;
			public int  c_war_done = 0;
			public int  c_wind_done = 0;
			public int  c_wisp_done = 0;
			public int  c_wonders_done = 0;
			public int  c_zeps = 0;
		//--------------------------------------------------------------------------------------------------
		//  set_skills
		//--------------------------------------------------------------------------------------------------
			public void set_skills(  )
			{
				// Original JassCode
				skill[ 1] = SEARING_ARROWS;
				skill[ 2] = TRUESHOT;
				skill[ 3] = SEARING_ARROWS;
				skill[ 4] = TRUESHOT;
				skill[ 5] = SEARING_ARROWS;
				skill[ 6] = STARFALL;
				skill[ 7] = TRUESHOT;
				skill[ 8] = SCOUT;
				skill[ 9] = SCOUT;
				skill[10] = SCOUT;
				SetSkillArray(1,MOON_CHICK);
				SetSkillArray(2,MOON_BABE);
				SetSkillArray(3,MOON_HONEY);
				skill[ 1] = FORCE_NATURE;
				skill[ 2] = ENT_ROOTS;
				skill[ 3] = FORCE_NATURE;
				skill[ 4] = ENT_ROOTS;
				skill[ 5] = FORCE_NATURE;
				skill[ 6] = TRANQUILITY;
				skill[ 7] = ENT_ROOTS;
				skill[ 8] = THORNS_AURA;
				skill[ 9] = THORNS_AURA;
				skill[10] = THORNS_AURA;
				SetSkillArray(1,KEEPER);
				skill[ 1] = ENT_ROOTS;
				skill[ 2] = THORNS_AURA;
				skill[ 3] = ENT_ROOTS;
				skill[ 4] = THORNS_AURA;
				skill[ 5] = ENT_ROOTS;
				skill[ 6] = TRANQUILITY;
				skill[ 7] = THORNS_AURA;
				skill[ 8] = FORCE_NATURE;
				skill[ 9] = FORCE_NATURE;
				skill[10] = FORCE_NATURE;
				SetSkillArray(2,KEEPER);
				SetSkillArray(3,KEEPER);
				skill[ 1] = IMMOLATION;
				skill[ 2] = MANA_BURN;
				skill[ 3] = EVASION;
				skill[ 4] = MANA_BURN;
				skill[ 5] = EVASION;
				skill[ 6] = METAMORPHOSIS;
				skill[ 7] = MANA_BURN;
				skill[ 8] = EVASION;
				skill[ 9] = IMMOLATION;
				skill[10] = IMMOLATION;
				SetSkillArray(1,DEMON_HUNTER);
				skill[ 1] = MANA_BURN;
				skill[ 2] = EVASION;
				skill[ 3] = MANA_BURN;
				skill[ 4] = EVASION;
				skill[ 5] = MANA_BURN;
				skill[ 6] = METAMORPHOSIS;
				skill[ 7] = EVASION;
				skill[ 8] = IMMOLATION;
				skill[ 9] = IMMOLATION;
				skill[10] = IMMOLATION;
				SetSkillArray(2,DEMON_HUNTER);
				SetSkillArray(3,DEMON_HUNTER);
				skill[ 1] = FAN_KNIVES;
				skill[ 2] = SHADOW_TOUCH;
				skill[ 3] = FAN_KNIVES;
				skill[ 4] = BLINK;
				skill[ 5] = FAN_KNIVES;
				skill[ 6] = VENGEANCE;
				skill[ 7] = SHADOW_TOUCH;
				skill[ 8] = BLINK;
				skill[ 9] = SHADOW_TOUCH;
				skill[10] = BLINK;
				SetSkillArray(1,WARDEN);
				SetSkillArray(2,WARDEN);
				SetSkillArray(3,WARDEN);
			}

		//--------------------------------------------------------------------------------------------------
		//  setup_force
		//--------------------------------------------------------------------------------------------------
			public void setup_force(  )
			{
				// Original JassCode
				AwaitMeleeHeroes();
				InitMeleeGroup();
				SetMeleeGroup( hero_id );
				SetMeleeGroup( hero_id2 );
				SetMeleeGroup( hero_id3 );
				SetMeleeGroup( ARCHER );
				SetMeleeGroup( HUNTRESS );
				SetMeleeGroup( DRUID_TALON );
				SetMeleeGroup( DRUID_CLAW );
				SetMeleeGroup( DRYAD );
				SetMeleeGroup( CHIMAERA );
				SetMeleeGroup( MOUNTAIN_GIANT );
				SetMeleeGroup( FAERIE_DRAGON );
				if(  GetUnitCountDone(HIPPO) > 0  )
				{
					SetMeleeGroup( HIPPO );
				}
				if(  GetUnitCountDone(HIPPO_RIDER) > 0  )
				{
					SetMeleeGroup( HIPPO_RIDER );
				}
				SetInitialWave(10);
			}

		//--------------------------------------------------------------------------------------------------
		//  force_level
		//--------------------------------------------------------------------------------------------------
			public int force_level(  )
			{
				// Original JassCode
				int level = 4;
				level = level + c_dragon_done + c_talon_done;
				level = level + 2 * c_archer_done / 3;
				level = level + 2 * c_dryad_done;
				level = level + 3 * c_huntress_done;
				level = level + 4 * (c_chimaera_done + c_bear_done);
				level = level + 5 * c_hero3_done;
				level = level + 6 * (c_hero2_done + c_mtn_giant_done);
				return level;
			}

		//--------------------------------------------------------------------------------------------------
		//  attack_sequence
		//--------------------------------------------------------------------------------------------------
			public void attack_sequence(  )
			{
				// Original JassCode
				bool needs_exp;
				bool has_siege;
				bool air_units;
				int level;
				while( true )
				{
					if(  c_hero1_done > 0 && c_archer_done >= 2 )
						break;
					Sleep(2);
				}
				if(  MeleeDifficulty() == MELEE_NEWBIE  )
				{
					Sleep(240);
				}
				StaggerSleep(0,2);
				while( true )
				{
					while( true )
					{
						if(  ! CaptainRetreating() )
							break;
						Sleep(2);
					}
					wave = wave + 1;
					if(  wave == 2  )
					{
						while( true )
						{
							if(  c_archer_done >= 4 )
								break;
							Sleep(2);
						}
					}
					setup_force();
					level = force_level();
					max_creeps = level * 4 / 5;
					min_creeps = max_creeps - 10;
					if(  min_creeps < 0  )
					{
						min_creeps = 0;
					}
					needs_exp = take_exp && (level >= 9 || c_gold_owned < 2000);
					has_siege = level >= 40 || c_ballista_done > 0 || c_chimaera_done > 0 || c_mtn_giant_done > 0;
					air_units = c_chimaera_done > 0 || c_dragon_done > 0;
					allow_air_creeps = air_units || c_archer_done > 3;
					SingleMeleeAttack(needs_exp,has_siege,false,air_units);
					if(  MeleeDifficulty() == MELEE_NEWBIE  )
					{
						Sleep(60);
					}
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  init_vars
		//--------------------------------------------------------------------------------------------------
			public void init_vars(  )
			{
				// Original JassCode
				b_acid_breath = GetUpgradeLevel(UPG_CHIM_ACID) >= 1;
				b_hero1_done = GetUnitCountDone(hero_id) > 0;
				b_hero2_done = GetUnitCountDone(hero_id2) > 0;
				c_altar_done = GetUnitCountDone(ELF_ALTAR);
				c_archer = GetUnitCount(ARCHER);
				c_archer_done = GetUnitCountDone(ARCHER);
				c_ballista = GetUnitCount(BALLISTA);
				c_ballista_done = GetUnitCountDone(BALLISTA);
				c_bear = TownCount(DRUID_CLAW);
				c_bear_done = TownCountDone(DRUID_CLAW);
				c_chimaera = GetUnitCount(CHIMAERA);
				c_chimaera_done = GetUnitCountDone(CHIMAERA);
				c_dragon_done = GetUnitCountDone(FAERIE_DRAGON);
				c_dryad = GetUnitCount(DRYAD);
				c_dryad_done = GetUnitCountDone(DRYAD);
				c_food_made = c_tree_life * GetFoodMade(TREE_LIFE) + c_moon_well * GetFoodMade(MOON_WELL);
				c_food_used = FoodUsed();
				c_gold = GetGold();
				c_gold_owned = GetGoldOwned();
				c_hero1_done = GetUnitCountDone(hero_id);
				c_hero2_done = GetUnitCountDone(hero_id2);
				c_hero3_done = GetUnitCountDone(hero_id3);
				c_hunt_hall_done = GetUnitCountDone(HUNTERS_HALL);
				c_huntress = GetUnitCount(HUNTRESS);
				c_huntress_done = GetUnitCountDone(HUNTRESS);
				c_lore_done = GetUnitCountDone(ANCIENT_LORE);
				c_mines = GetMinesOwned();
				c_mines_done = GetUnitCountDone(ELF_MINE);
				c_moon_well = GetUnitCount(MOON_WELL);
				c_moon_well_done = GetUnitCountDone(MOON_WELL);
				c_mtn_giant = GetUnitCount(MOUNTAIN_GIANT);
				c_mtn_giant_done = GetUnitCountDone(MOUNTAIN_GIANT);
				c_roost_done = GetUnitCountDone(CHIMAERA_ROOST);
				c_talon = TownCount(DRUID_TALON);
				c_talon_done = TownCountDone(DRUID_TALON);
				c_tree_ages_done = TownCountDone(TREE_AGES);
				c_tree_etern_done = TownCountDone(TREE_ETERNITY);
				c_tree_life = TownCount(TREE_LIFE);
				c_tree_life_done = TownCountDone(TREE_LIFE);
				c_war_done = GetUnitCountDone(ANCIENT_WAR);
				c_wind_done = GetUnitCountDone(ANCIENT_WIND);
				c_wisp_done = GetUnitCountDone(WISP);
				c_wonders_done = GetUnitCountDone(DEN_OF_WONDERS);
				c_zeps = GetUnitCount(ZEPPELIN);
				if(  basic_opening  )
				{
					if(  b_hero2_done || (MeleeDifficulty() == MELEE_NEWBIE && c_moon_well_done >= 4)  )
					{
						basic_opening = false;
					}
					if(  archer_opening && c_archer_done >= 6  )
					{
						archer_opening = false;
					}
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  set_vars
		//--------------------------------------------------------------------------------------------------
			public void set_vars(  )
			{
				// Original JassCode
				while( true )
				{
					init_vars();
					Sleep(1);
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  basics
		//--------------------------------------------------------------------------------------------------
			public void basics( int food )
			{
				// Original JassCode
				int archers;
				int hunts;
				if(  archer_opening || c_hunt_hall_done < 1  )
				{
					archers = food / 2;
					if(  archers > 6  )
					{
						archers = 6;
					}
					SetBuildUnit( archers, ARCHER );
					return;
				}
				hunts = (food - 2 * c_archer) / 3;
				if(  hunts > 3  )
				{
					hunts = 3;
				}
				SetBuildUnit( hunts, HUNTRESS );
				if(  food >= 15  )
				{
					SetBuildUnit( 3, ARCHER );
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  do_upgrades
		//--------------------------------------------------------------------------------------------------
			public void do_upgrades(  )
			{
				// Original JassCode
				if(  c_tree_etern_done >= 1 && c_hunt_hall_done >= 1  )
				{
					SetBuildUpgr( 1, UPG_WELL_SPRING );
				}
				if(  c_dryad >= 1 && c_lore_done >= 1  )
				{
					SetBuildUpgr( 1, UPG_ABOLISH );
				}
				if(  c_roost_done >= 1  )
				{
					SetBuildUpgr( 1, UPG_CHIM_ACID );
				}
				if(  c_hunt_hall_done >= 1  )
				{
					if(  c_archer + c_huntress + c_ballista >= 3  )
					{
						SetBuildUpgr( 1, UPG_STR_MOON );
						SetBuildUpgr( 1, UPG_MOON_ARMOR );
						if(  c_tree_ages_done >= 1  )
						{
							SetBuildUpgr( 2, UPG_STR_MOON );
							SetBuildUpgr( 2, UPG_MOON_ARMOR );
							if(  c_tree_etern_done >= 1  )
							{
								SetBuildUpgr( 3, UPG_STR_MOON );
								SetBuildUpgr( 3, UPG_MOON_ARMOR );
							}
						}
					}
					if(  c_dryad + c_mtn_giant + c_chimaera >= 3  )
					{
						SetBuildUpgr( 1, UPG_STR_WILD );
						SetBuildUpgr( 1, UPG_HIDES );
						if(  c_tree_ages_done >= 1  )
						{
							SetBuildUpgr( 2, UPG_STR_WILD );
							SetBuildUpgr( 2, UPG_HIDES );
							if(  c_tree_etern_done >= 1  )
							{
								SetBuildUpgr( 3, UPG_STR_WILD );
								SetBuildUpgr( 3, UPG_HIDES );
							}
						}
					}
				}
				if(  c_mtn_giant >= 1 && c_tree_etern_done >= 1 && c_wonders_done >= 1 && c_lore_done >= 1  )
				{
					SetBuildUpgr( 1, UPG_HARD_SKIN );
					SetBuildUpgr( 1, UPG_RESIST_SKIN );
				}
				if(  c_war_done >= 1  )
				{
					if(  c_huntress >= 3 && c_tree_etern_done >= 1 && c_hunt_hall_done >= 1  )
					{
						SetBuildUpgr( 1, UPG_GLAIVE );
						SetBuildUpgr( 1, UPG_SCOUT );
					}
					if(  c_archer >= 3  )
					{
						if(  c_tree_ages_done >= 1  )
						{
							SetBuildUpgr( 1, UPG_BOWS );
							if(  c_tree_etern_done >= 1 && c_hunt_hall_done >= 1  )
							{
								SetBuildUpgr( 1, UPG_MARKSMAN );
							}
						}
					}
					if(  c_ballista >= 1  )
					{
						SetBuildUpgr( 1, UPG_ULTRAVISION );
						SetBuildUpgr( 1, UPG_BOLT );
					}
				}
				if(  c_lore_done >= 1  )
				{
					if(  c_bear >= 1  )
					{
						SetBuildUpgr( 1, UPG_DRUID_CLAW );
						if(  c_tree_etern_done >= 1  )
						{
							SetBuildUpgr( 2, UPG_DRUID_CLAW );
							SetBuildUpgr( 1, UPG_MARK_CLAW );
						}
					}
					if(  c_talon >= 1  )
					{
						SetBuildUpgr( 1, UPG_DRUID_TALON );
						if(  c_tree_etern_done >= 1  )
						{
							SetBuildUpgr( 2, UPG_DRUID_TALON );
							SetBuildUpgr( 1, UPG_MARK_TALON );
						}
					}
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  build_sequence
		//--------------------------------------------------------------------------------------------------
			public void build_sequence(  )
			{
				// Original JassCode
				bool primary_melee;
				int wisps;
				InitBuildArray();
				if(  basic_opening  )
				{
					SetBuildUnit( 1, TREE_LIFE );
					SetBuildUnit( 5, WISP );
					SetBuildUnit( 1, ELF_ALTAR );
					SetBuildUnit( 7, WISP );
					SetBuildUnit( 1, MOON_WELL );
					SetBuildUnit( 8, WISP );
					SetBuildUnit( 1, ANCIENT_WAR );
					SetBuildUnit( 9, WISP );
					SetBuildUnit( 1, hero_id );
					SetBuildUnit( 10, WISP );
					SetBuildUnit( 2, MOON_WELL );
					// (  1, ARCHER           )
					basics(2);
					SetBuildUnit( 1, DEN_OF_WONDERS );
					// (  2, ARCHER           )
					basics(4);
					SetBuildUnit( 11, WISP );
					// (  3, ARCHER           )
					basics(6);
					SetBuildUnit( 12, WISP );
					SetBuildUnit( 1, HUNTERS_HALL );
					SetBuildUnit( 3, MOON_WELL );
					SetBuildUnit( 13, WISP );
					// (  4, ARCHER           )
					basics(8);
					SetBuildUnit( 14, WISP );
					//(  5, ARCHER           )
					basics(10);
					SetBuildUnit( 15, WISP );
					//(  6, ARCHER           )
					basics(15);
					//(  1, HUNTRESS         )
					SetBuildUnit( 1, TREE_AGES );
					BasicExpansion( c_mines < 2, TREE_LIFE );
					SetBuildUpgr( 1, UPG_STR_MOON );
					SetBuildUpgr( 1, UPG_MOON_ARMOR );
					SetBuildUnit( 4, MOON_WELL );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						SetBuildUnit( 1, hero_id2 );
					}
					return;
				}
				if(  c_tree_life < 1 && c_wisp_done > 0  )
				{
					MeleeTownHall( 0, TREE_LIFE );
					MeleeTownHall( 1, TREE_LIFE );
					MeleeTownHall( 2, TREE_LIFE );
				}
				if(  c_tree_life_done > 0  )
				{
					wisps = 6 - GetWood() / 200;
					if(  wisps < 3  )
					{
						wisps = 3;
					}
					if(  c_mines < 2 || c_tree_life_done < 2  )
					{
						wisps = wisps + 5;
					}
					else
					{
						wisps = wisps + 10;
					}
					if(  wisps > 15  )
					{
						wisps = 15;
					}
					SetBuildNext( wisps, WISP );
				}
				if(  c_gold > 500 && GetWood() < 100  )
				{
					SetBuildNext( 15, WISP );
				}
				// having enough gold is the highest priority
				//
				if(  c_gold_owned < 2000  )
				{
					BasicExpansion( c_mines < 2, TREE_LIFE );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 1, 1, ANCIENT_PROTECT );
						GuardSecondary( 1, 2, ANCIENT_PROTECT );
					}
				}
				// get enough moon wells to cover food need
				//
				if(  c_food_used + 7 > c_food_made  )
				{
					SetBuildUnit( c_moon_well_done + 1, MOON_WELL );
				}
				// recover heroes for basic defense
				//
				if(  c_altar_done >= 1  )
				{
					if(  b_hero1_done && MeleeDifficulty() != MELEE_NEWBIE  )
					{
						SetBuildUnit( 1, hero_id2 );
					}
					else
					{
						SetBuildUnit( 1, hero_id );
					}
				}
				else
				{
					SetBuildUnit( 1, ELF_ALTAR );
				}
				// the primary melee force is the mountain giant
				//
				primary_melee = c_lore_done >= 1 && c_wonders_done >= 1 && c_tree_ages_done >= 1;
				if(  primary_melee  )
				{
					SetBuildNext( 1, MOUNTAIN_GIANT );
					// the backup melee force is the huntress
					//
				}
				else
				{
					SetBuildUnit( 1, ANCIENT_WAR );
					SetBuildNext( 3, HUNTRESS );
				}
				// the primary ranged force is the dryad
				//
				if(  c_lore_done >= 1  )
				{
					SetBuildUnit( 2, DRYAD );
					// the backup ranged force is the archer
					//
				}
				else
				{
					SetBuildUnit( 1, ANCIENT_WAR );
					SetBuildUnit( 3, ARCHER );
				}
				// need siege to take out enemy towns and expansions
				//
				if(  b_acid_breath && c_roost_done >= 1  )
				{
					SetBuildUnit( 2, CHIMAERA );
				}
				else if(  c_mtn_giant < 1  )
				{
					SetBuildUnit( 2, BALLISTA );
				}
				// if we have enough gold then advance on the tech tree
				//
				if(  c_gold > 1000  )
				{
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 1, 1, ANCIENT_PROTECT );
						GuardSecondary( 1, 2, ANCIENT_PROTECT );
					}
					SetBuildUnit( 1, ANCIENT_WAR );
					SetBuildUnit( 1, HUNTERS_HALL );
					SetBuildUnit( 1, TREE_AGES );
					SetBuildUnit( 1, DEN_OF_WONDERS );
					SetBuildUnit( 1, ANCIENT_LORE );
					SetBuildUnit( 1, TREE_ETERNITY );
					SetBuildUnit( 1, ANCIENT_WIND );
					SetBuildUnit( 1, CHIMAERA_ROOST );
					do_upgrades();
					if(  c_gold > 2000  )
					{
						BuildFactory( ANCIENT_LORE );
						BuildFactory( ANCIENT_WAR );
						BuildFactory( CHIMAERA_ROOST );
						BuildFactory( ANCIENT_WIND );
					}
				}
				else if(  c_food_used >= UPKEEP_TIER1  )
				{
					do_upgrades();
				}
				BasicExpansion( c_mines < 2, TREE_LIFE );
				if(  MeleeDifficulty() != MELEE_NEWBIE  )
				{
					GuardSecondary( 1, 1, ANCIENT_PROTECT );
					GuardSecondary( 1, 2, ANCIENT_PROTECT );
				}
				if(  c_food_used >= UPKEEP_TIER2 - 10 && c_gold < 2000  )
				{
					return;
				}
				// build units from whatever buildings we already have
				//
				if(  primary_melee  )
				{
					SetBuildNext( 3, MOUNTAIN_GIANT );
				}
				else
				{
					SetBuildNext( 7, HUNTRESS );
				}
				if(  c_lore_done >= 1  )
				{
					SetBuildNext( 4, DRYAD );
				}
				else
				{
					SetBuildNext( 6, ARCHER );
				}
				if(  c_tree_ages_done >= 1  )
				{
					if(  c_tree_etern_done >= 1 && c_altar_done >= 1 && MeleeDifficulty() != MELEE_NEWBIE  )
					{
						SetBuildUnit( 1, hero_id3 );
					}
					if(  c_lore_done >= 1  )
					{
						SetBuildUnit( 1, DRUID_CLAW );
					}
				}
				if(  c_wind_done >= 1  )
				{
					if(  c_wonders_done >= 1  )
					{
						SetBuildUnit( 1, FAERIE_DRAGON );
					}
					SetBuildUnit( 1, DRUID_TALON );
				}
				if(  c_gold_owned < 10000  )
				{
					BasicExpansion( c_mines < 3, TREE_LIFE );
					if(  MeleeDifficulty() != MELEE_NEWBIE  )
					{
						GuardSecondary( 2, 1, ANCIENT_PROTECT );
						GuardSecondary( 2, 2, ANCIENT_PROTECT );
					}
				}
				if(  c_food_used >= 60 && c_zeps < 3  )
				{
					GetZeppelin();
				}
			}

		//--------------------------------------------------------------------------------------------------
		//  peon_assignment
		//--------------------------------------------------------------------------------------------------
			public void peon_assignment(  )
			{
				// Original JassCode
				int T;
				while( true )
				{
					ClearHarvestAI();
					T = TownWithMine();
					HarvestGold(T,4);
					HarvestWood(0,1);
					HarvestGold(T,1);
					HarvestWood(0,2);
					if(  c_mines_done > 1  )
					{
						HarvestGold(T+1,5);
					}
					HarvestWood(0,20);
					build_sequence();
					Sleep(GetRandomInt(1,3));
				}
			}

		//--------------------------------------------------------------------------------------------------
		//    main
		//--------------------------------------------------------------------------------------------------
			public void main(  )
			{
				// Original JassCode
				PickMeleeHero(RACE_NIGHTELF);
				set_skills();
				StandardAI(SkillArrays,  peon_assignment,  attack_sequence);
				StartThread( set_vars);
				PlayGame();
			}

		} // class elf_ai 

	}

