// Generated by .


	public partial class GameDefine 
	{

		public class o03_grom_ai
		{
		//============================================================================
		//  Orc 3 -- Grom Ally -- AI Script
		//============================================================================
			//                      no data
			public int GO_AGRO = 1;
			//                      no data
			public int GO_KILL = 2;
			// data = player ID
			public int PLAYER_DIED = 3;
			//                      no data
			public int PLAYER_ASS = 4;
			// data = player ID
			public int CLEAR_AGRO = 5;
			public int USER = 0;
			public int BLUE = 1;
			public int GRAY = 8;
			public int LIGHT_BLUE = 9;
			public int GREEN = 10;
			public int EASY_AGRO = 120;
			public int NORMAL_AGRO = 120;
			public int HARD_AGRO = 120;
			public int  grom_target = -1;
			public int  wave_index = 0;
			public int  strength = 1;
			public bool  agro_mode = true;
			public bool [] alive;
			public bool [] needs_agro;
		//============================================================================
		//  set_build_units
		//============================================================================
			public void set_build_units( bool fplayer )
			{
				// Original JassCode
				if(  ! fplayer  )
				{
					SetBuildUnit( 1, PEON );
					SetBuildUnit( 1, GREAT_HALL );
					SetBuildUnit( 1, ORC_BARRACKS );
					SetBuildUnit( 1, STRONGHOLD );
					SetBuildUnit( 1, ORC_ALTAR );
					SetBuildUnit( 1, FORGE );
					SetBuildUnit( 1, BESTIARY );
					SetBuildUnit( 7, PEON );
				}
				else
				{
					SetBuildUnit( 2, ORC_BARRACKS );
					SetBuildUnit( 2, BESTIARY );
					SetBuildUnit( 4, ORC_WATCH_TOWER );
				}
			}

		//============================================================================
		//  set_defenders
		//============================================================================
			public void set_defenders( bool fplayer )
			{
				// Original JassCode
				if(  ! fplayer  )
				{
					CampaignDefenderEx( 1,1,1, GROM );
					CampaignDefenderEx( 2,2,2, GRUNT );
					CampaignDefenderEx( 2,2,2, HEAD_HUNTER );
					CampaignDefenderEx( 4,4,4, RAIDER );
				}
				else
				{
					CampaignDefenderEx( 2,2,2, GRUNT );
					CampaignDefenderEx( 1,1,1, HEAD_HUNTER );
					CampaignDefenderEx( 1,1,2, RAIDER );
				}
			}

		//============================================================================
		//  assault_wave
		//============================================================================
			public void assault_wave(  )
			{
				// Original JassCode
				//------------------------------------------------------------------------
				if(  grom_target == USER  )
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 3,3,4, GRUNT );
					CampaignAttackerEx ( 3,3,4, HEAD_HUNTER );
					CampaignAttackerEx ( 1,1,2, CATAPULT );
					CampaignAttackerEx ( 2,2,4, RAIDER );
					SuicideOnPlayer(M5,Player(grom_target));
					//------------------------------------------------------------------------
				}
				else if(  strength == 1  )
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 4,4,5, GRUNT );
					SuicideOnPlayer(M5,Player(grom_target));
					strength = 2;
					//------------------------------------------------------------------------
				}
				else if(  strength == 2  )
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 3,3,4, GRUNT );
					CampaignAttackerEx ( 2,2,2, HEAD_HUNTER );
					SuicideOnPlayer(M5,Player(grom_target));
					strength = 3;
					//------------------------------------------------------------------------
					// strength >= 3
				}
				else
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 3,3,4, RAIDER );
					CampaignAttackerEx ( 2,2,2, HEAD_HUNTER );
					SuicideOnPlayer(M5,Player(grom_target));
					strength = 1;
				}
			}

		//============================================================================
		//  agro_wave
		//============================================================================
			public void agro_wave(  )
			{
				// Original JassCode
				//------------------------------------------------------------------------
				if(  strength==1  )
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 4,4,5, GRUNT );
					SuicideOnPlayer(0,Player(grom_target));
					//------------------------------------------------------------------------
				}
				else if(  strength==2  )
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 3,3,4, GRUNT );
					CampaignAttackerEx ( 3,3,4, HEAD_HUNTER );
					SuicideOnPlayer(M3,Player(grom_target));
					//------------------------------------------------------------------------
					// strength >= 3
				}
				else
				{
					//------------------------------------------------------------------------
					CampaignAttackerEx ( 3,3,4, GRUNT );
					CampaignAttackerEx ( 3,3,4, HEAD_HUNTER );
					CampaignAttackerEx ( 3,3,4, RAIDER );
					SuicideOnPlayer(M3,Player(grom_target));
				}
			}

		//============================================================================
		//  init_arrays
		//============================================================================
			public void init_arrays(  )
			{
				// Original JassCode
				int index = 0;
				while( true )
				{
					alive [index] = false;
					needs_agro [index] = false;
					index = index + 1;
					if(  index == 11 )
						break;
				}
				alive [ BLUE ] = true;
				alive [ GRAY ] = true;
				alive [ LIGHT_BLUE ] = true;
				alive [ GREEN ] = true;
				needs_agro [ BLUE ] = true;
				needs_agro [ GRAY ] = true;
				needs_agro [ LIGHT_BLUE ] = true;
				needs_agro [ GREEN ] = true;
			}

		//============================================================================
		//  wait_for_start
		//============================================================================
			public void wait_for_start(  )
			{
				// Original JassCode
				while( true )
				{
					Trace("waiting for first command...\n");
					if(  CommandsWaiting() != 0 )
						break;
					Sleep(5);
				}
				TraceI("...first command ({0}) received.\n",GetLastCommand());
			}

		//============================================================================
		//  possible_agro
		//============================================================================
			public void possible_agro( int target )
			{
				// Original JassCode
				if(  grom_target == -1 && alive[target] && needs_agro[target]  )
				{
					grom_target = target;
					needs_agro[target] = false;
					TraceI("NOTICE: SET NEEDS_AGRO[{0}] = FALSE\n",target);
				}
			}

		//============================================================================
		//  next_alive
		//============================================================================
			public void next_alive(  )
			{
				// Original JassCode
				while( true )
				{
					grom_target = wave_index;
					wave_index = wave_index + 1;
					if(  wave_index == 11  )
					{
						wave_index = 0;
						Sleep(1);
					}
					if(  alive[grom_target] )
						break;
				}
				TraceI("Grom setting normal attack wave target = {0}\n",grom_target);
			}

		//============================================================================
		//  go_agro
		//============================================================================
			public void go_agro(  )
			{
				// Original JassCode
				if(  grom_target != -1  )
				{
					Trace("Grom successful, sleeping for a while\n");
					if(  difficulty==EASY  )
					{
						Sleep(EASY_AGRO);
					}
					else if(  difficulty==NORMAL  )
					{
						Sleep(NORMAL_AGRO);
					}
					else
					{
						Sleep(HARD_AGRO);
					}
					grom_target = -1;
					strength = 1;
				}
				possible_agro( BLUE );
				possible_agro( GRAY );
				possible_agro( LIGHT_BLUE );
				possible_agro( GREEN );
				TraceI("changing agro target to {0}\n",grom_target);
			}

		//============================================================================
		//  process_commands
		//============================================================================
			public void process_commands(  )
			{
				// Original JassCode
				int cmd;
				int data;
				while( true )
				{
					if(  CommandsWaiting() == 0 )
						break;
					cmd = GetLastCommand();
					data = GetLastData();
					PopLastCommand();
					TraceI("COMMAND = {0}\n",cmd);
					TraceI("DATA = {0}\n",data);
					//====================================================================
					if(  cmd == GO_AGRO  )
					{
						//====================================================================
						go_agro();
						//====================================================================
					}
					else if(  cmd == GO_KILL  )
					{
						//====================================================================
						Trace("agro waves complete, starting assault waves\n");
						agro_mode = false;
						strength = 1;
						//====================================================================
					}
					else if(  cmd == PLAYER_DIED  )
					{
						//====================================================================
						TraceI("NOTICE: TOWN {0} JUST DIED\n",data);
						alive[data] = false;
						//====================================================================
					}
					else if(  cmd == PLAYER_ASS  )
					{
						//====================================================================
						Trace("player gonna get punished now!\n");
						set_build_units(true);
						set_defenders(true);
						// ha ha!
						alive[USER] = true;
						wave_index = USER;
						//====================================================================
					}
					else if(  cmd == CLEAR_AGRO  )
					{
						//====================================================================
						if(  data == grom_target  )
						{
							TraceI("player agro'd Grom's target ({0}) first\n",data);
							go_agro();
						}
						else
						{
							TraceI("player agro'd {0} (! Grom's current target)\n",data);
						}
						TraceI("NOTICE: SET NEEDS_AGRO[{0}] = FALSE\n",data);
						needs_agro[data] = false;
						//====================================================================
						// UNKNOWN COMMAND
					}
					else
					{
						//====================================================================
						TraceI("WARNING: UNKNOWN COMMAND ({0})\n",cmd);
					}
				}
			}

		//============================================================================
		//  agro_loop
		//============================================================================
			public void agro_loop(  )
			{
				// Original JassCode
				while( true )
				{
					process_commands();
					if(  ! agro_mode )
						break;
					if(  grom_target == -1  )
					{
						Trace("ERROR: Grom has no agro target!\n");
						return;
					}
					InitAssaultGroup();
					CampaignAttacker( EASY, 1, GROM );
					agro_wave();
					strength = strength + 1;
				}
			}

		//============================================================================
		//  wave_loop
		//============================================================================
			public void wave_loop(  )
			{
				// Original JassCode
				while( true )
				{
					process_commands();
					next_alive();
					InitAssaultGroup();
					CampaignAttacker( EASY, 1, GROM );
					assault_wave();
				}
			}

		//============================================================================
		//  main
		//============================================================================
			public void main(  )
			{
				// Original JassCode
				CampaignAI(BURROW,null);
				init_arrays();
				set_build_units(false);
				set_defenders(false);
				wait_for_start();
				agro_loop();
				wave_loop();
			}

		} // class o03_grom_ai 

	}

